<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4">

	<display-name>lvl6-Kingdom</display-name>
	<description>Lvl6 Kingdom Server</description>


	<servlet>
		<servlet-name>IddictionServlet</servlet-name>
		<servlet-class>com.lvl6.tracking.AppODayUserTrackerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>IddictionServlet</servlet-name>
		<url-pattern>/iddiction</url-pattern>
	</servlet-mapping>



	<!-- Hazelcast session clustering -->
<!-- 
	<filter>
		<filter-name>hazelcast-filter</filter-name>
		<filter-class>com.hazelcast.web.WebFilter</filter-class>
		Name of the distributed map storing your web session objects
		<init-param>
			<param-name>map-name</param-name>
			<param-value>admin-sessions</param-value>
		</init-param>
		How is your load-balancer configured? stick-session means all requests 
			of a session is routed to the node where the session is first created. This 
			is excellent for performance. If sticky-session is set to false, when a session 
			is updated on a node, entry for this session on all other nodes is invalidated. 
			You have to know how your load-balancer is configured before setting this 
			parameter. Default is true.
		<init-param>
			<param-name>sticky-session</param-name>
			<param-value>false</param-value>
		</init-param>
		Name of session id cookie
		<init-param>
			<param-name>cookie-name</param-name>
			<param-value>hazelcast.sessionId</param-value>
		</init-param>
		Are you debugging? Default is false.
		<init-param>
			<param-name>debug</param-name>
			<param-value>false</param-value>
		</init-param>
		Do you want to use an existing HazelcastInstance? Default is null.
		<init-param>
			<param-name>instance-name</param-name>
			<param-value>hazel</param-value>
		</init-param>
		Do you want to shutdown HazelcastInstance during web application undeploy 
			process? Default is true.
		<init-param>
			<param-name>shutdown-on-destroy</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>hazelcast-filter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>

	<listener>
		<listener-class>com.hazelcast.web.SessionListener</listener-class>
	</listener> -->


	<!-- Spring Security -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<filter>
		<filter-name>Lvl6Admin</filter-name>
		<filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
		<init-param>
			<param-name>applicationClassName</param-name>
			<param-value>com.lvl6.ui.admin.Lvl6Admin</param-value>
		</init-param>
		<init-param>
			<param-name>ignorePaths</param-name>
			<param-value>/iddiction,/healthcheck</param-value>
		</init-param>
		<init-param>
			<param-name>configuration</param-name>
			<param-value>${wicket.mode}</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>Lvl6Admin</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>




	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring-application-context.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>


	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

</web-app>